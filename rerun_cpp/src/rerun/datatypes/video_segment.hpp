// DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/cpp/mod.rs
// Based on "crates/store/re_types/definitions/rerun/datatypes/video.fbs".

#pragma once

#include "../collection.hpp"
#include "../result.hpp"
#include "uint64.hpp"
#include "video_sample.hpp"

#include <cstdint>
#include <memory>

namespace arrow {
    class Array;
    class DataType;
    class StructBuilder;
} // namespace arrow

namespace rerun::datatypes {
    /// **Datatype**: A segment of video made up of one or more samples, always starts with a key frame.
    struct VideoSegment {
        /// Time of the first sample in this segment, in time units.
        rerun::datatypes::UInt64 timestamp;

        /// List of samples contained in this segment.
        ///
        /// At least one sample per segment is guaranteed, and the first sample is always a key frame.
        rerun::Collection<rerun::datatypes::VideoSample> samples;

      public:
        VideoSegment() = default;
    };
} // namespace rerun::datatypes

namespace rerun {
    template <typename T>
    struct Loggable;

    /// \private
    template <>
    struct Loggable<datatypes::VideoSegment> {
        static constexpr const char Name[] = "rerun.datatypes.VideoSegment";

        /// Returns the arrow data type this type corresponds to.
        static const std::shared_ptr<arrow::DataType>& arrow_datatype();

        /// Serializes an array of `rerun::datatypes::VideoSegment` into an arrow array.
        static Result<std::shared_ptr<arrow::Array>> to_arrow(
            const datatypes::VideoSegment* instances, size_t num_instances
        );

        /// Fills an arrow array builder with an array of this type.
        static rerun::Error fill_arrow_array_builder(
            arrow::StructBuilder* builder, const datatypes::VideoSegment* elements,
            size_t num_elements
        );
    };
} // namespace rerun
